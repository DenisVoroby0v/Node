name: SonarQube Analysis
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          npm install
          npm install sonar-scanner --save-dev

      - name: List installed packages
        run: npm list

      - name: Run tests and generate coverage
        run: npm test || echo "No tests found, skipping test step"

      - name: Print test results
        run: |
          if [ -f coverage/lcov.info ]; then
            cat coverage/lcov.info
          else
            echo "No coverage report found"
          fi

      - name: Run SonarQube Scanner
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonar-scanner \
          -Dsonar.projectKey=node_project_key \
          -Dsonar.projectName=Node \
          -Dsonar.projectVersion=1.0 \
          -Dsonar.sources=src \
          -Dsonar.tests=__tests__ \
          -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Print SonarQube Scanner log
        run: |
          if [ -f .scannerwork/scanner-report.log ]; then
            cat .scannerwork/scanner-report.log
          else
            echo "No scanner log found"
          fi
